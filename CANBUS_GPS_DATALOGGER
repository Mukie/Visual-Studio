#include <SPI.h>
#include "mcp_can.h"
#include <SPI.h>
#include <SD.h>
#include "SIM900.h"
#include "gps.h"
#include <SoftwareSerial.h>
GPSGSM gps;

const int SPI_CS_PIN = 9;
const int chipSelect = 4;
const int GPStxPin = 19;
const int GPSrxPin = 18;
char lon[15];
char lat[15];
char alt[15];
char time[20];
char vel[15];
char msg1[5];
char msg2[5];

char stat;
char inSerial[20];
int i=0;
boolean started=false;

SoftwareSerial myGPS(GPSrxPin, GPStxPin);

File dataFile;

MCP_CAN CAN(SPI_CS_PIN);

char str[20];

void setup() 
{
    Serial.begin(115200);

    START_INIT:

    if(CAN_OK == CAN.begin(CAN_500KBPS))                   // init can bus : baudrate = 500k
    {
        Serial.println("CAN BUS Shield init ok!");
    }
    else
    {
        Serial.println("CAN BUS Shield init fail");
        Serial.println("Init CAN BUS Shield again");
        delay(100);
        goto START_INIT;
    }
    Serial.print("Initializing SD card...");
    pinMode(SS, OUTPUT);
    if(!SD.begin(chipSelect))
    {
      Serial.println("Card failed, or not present");
      while(1);
    }
    Serial.println("card initialized.");
    dataFile = SD.open("datalog.txt", FILE_WRITE);
    if (! dataFile)
    {
      Serial.println("error opening datalog.txt");
      while(1);
    }
    pinMode(GPStxPin,OUTPUT);
    pinMode(GPSrxPin,INPUT);
    Serial.println("Initializing GPS ...");
    if(gsm.begin(2400))
    {
      Serial.println("\nstatus=READY");
      gsm.forceON();
      started=true;
    }
    else Serial.println("\nsatatus=IDLE");
    if(started)
    { //GPS attach
      if(gps.attachGPS())
      Serial.println("status=GPSREADY");
      else Serial.print("status=ERROR");
      delay(20000); //Time for fixing
      stat = gps.getStat();
        if(stat==1)
          Serial.println("NOT FIXED");
        else if(stat==0)
          Serial.println("GPS OFF");
        else if(stat==2)
          Serial.println("2D FIXED");
        else if(stat==3)
          Serial.println("3D FIXED");
          delay(500);
     //Get data from GPS
     gps.getPar(lon,lat,alt,time,vel);
          Serial.println(lon);
          Serial.println(lat);
          Serial.println(alt);
          Serial.println(time);
          Serial.println(vel);
    }
};

void loop()
{
    String dataString = "";
    unsigned char len = 0;
    unsigned char buf[8];

    if(CAN_MSGAVAIL == CAN.checkReceive())            // check if data coming
    {
        CAN.readMsgBuf(&len, buf);    // read data,  len: data length, buf: data buf

        unsigned long canId = CAN.getCanId();
        
        Serial.println("-----------------------------");
        Serial.print("get data from ID: ");
        Serial.println(canId, HEX);

        for(int i = 0; i<len; i++)    // print the data
        {
            Serial.print(buf[i]);
            Serial.print("\t");
        }
        //Read for new byte on serial hardware
        //and write them on NewSoftSerial
        serialhwread();
        //Read for new byte on NewSoftSerial
        serialswread();
        
     Serial.println();
     dataFile.println(dataString);
     Serial.println(dataString);
     dataFile.flush(); //ทำให้ ความเร็วนในการ save ช้าลง แต่จะมีความปลอดภัยมากกว่า
     delay(500);
    }
}

void serialhwread()
{
     i=0;
     if (Serial.available() > 0) {
          while (Serial.available() > 0) {
               inSerial[i]=(Serial.read());
               delay(10);
               i++;
          }

          inSerial[i]='\0';
          if(!strcmp(inSerial,"/END")) {
               Serial.println("_");
               inSerial[0]=0x1a;
               inSerial[1]='\0';
               gsm.SimpleWriteln(inSerial);
          }
          //Send a saved AT command using serial port.
          if(!strcmp(inSerial,"TEST")) {
//      Serial.println("BATTERY TEST 1");
//      gps.getBattInf(msg1,msg2);
//      Serial.println(msg1);
//      Serial.println(msg2);
//      Serial.println("BATTERY TEST 2");
//      gps.getBattTVol(msg1);
//      Serial.println(msg1);
               stat=gps.getStat();
               if(stat==1)
                    Serial.println("NOT FIXED");
               else if(stat==0)
                    Serial.println("GPS OFF");
               else if(stat==2)
                    Serial.println("2D FIXED");
               else if(stat==3)
                    Serial.println("3D FIXED");
          }
          //Read last message saved.
          if(!strcmp(inSerial,"MSG")) {
               Serial.println(msg1);
          } else {
               Serial.println(inSerial);
               gsm.SimpleWriteln(inSerial);
          }
          inSerial[0]='\0';
     }
}

void serialswread()
{
     gsm.SimpleRead();
}

